How did viewing a diff between two versions of a file help you see the bug that was introduced?
Able to see only lines that changed.
Easy to differentiate between old and new versions.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Help find the original idea.
Follow evolution of thought processes.
Find last 'working version'.
Start over from a certyain point where things started to go wrong.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Forgetting to commit at logical points.
Space constraints for large programs.
Easier to follow dev process for outside programmer.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Diffrent user base.
Docs targets odcs, which are for the most part single independent things.
Programs often have multiple interrealted files.

How can you use the commands git log and git diff to view the history of files?
Log should show history of how project developed through the comments.
Diff shows differences between two commits.

How might using version control make you more confident to make changes that could break something?
Can always go back to a known good version
Create code splits to compare.

Now that you have your workspace set up, what do you want to try using Git for?
Maintaining projects.
Use in further Udacity courses.
Create a project 'resume'.